MODULE:

unhappy with cookieparsing in cosign_auth().
unhappy with cookie_valid/read_secant division. 

upon cookie_ok, module sets up cgi env ( remote user etc )
    /* aka "/ticket/kerb.canna" in current system */
    krb_set_tkt_string( tfname );
    ap_table_set( r->subprocess_env, "KRBTKFILE", tfname );
    ap_table_set( r->subprocess_env, "REMOTE_REALM", realm );
    r->connection->user is REMOTE_USER, i believe

TODO in MOD:
    kerberos
    cookie obscuring - post 1.0

CGI:
    initial info and ticket propogation (belt)
    kerberos
    conf file

COSIGND:
    kerberos
    replication (suspenders)
    conf file
    where does it live?


1) you would have needed to login, but you don't now!
2) use of qs for redirect back URL ( consistency ).

Protocol:

cosign.cgi:
    LOGIN login_cookie ip princ realm [ tgt ]
    LOGOUT login_cookie ip
    REGISTER login_cookie ip service_cookie
    CHECK login_cookie

mod_cosign:
    CHECK service_cookie
    RETRIEVE service_cookie ip [ tkt ]

cosignd:
    POLL timestamp

everyone:
    STARTTLS
    NOOP: no op.
    QUIT: quit

Misc notes:

configuration files:

    module:  configured entirely in web server config files.  has
	    a directive that lists which tickets it will ask for
	    per location?  per directory?  per server?  all of the
	    above?

    cosignd: has a list ( in /usr/local/etc/cosign.conf? ) of
	    services, which tickets they can request, top of site,
	    top of site policy, name of service for display ( e.g.
	    "Conferencing on the Web" ), name of service for cookies
	    minus cosign- ( e.g.  "cow" ), is include in service list?.

	    possible additions:
	    audience (for service list)


    cosign.cgi: uses same conf file as cosignd.

FILE FORMAT:

cosign=
v1.0
s<0/1>
i141.211.164.2
pcanna
rUMICH.EDU
t<secondssince1970>
[k<path_to_k5_tfile>]

cosign-service=
l<path_to_login_cookie>

conf file:
keyword[ cgi, daemon, service ], hostname[ subject dn ], get_tickets[ 0/1 ]
