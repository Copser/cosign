Before you begin:

    These instructions are for people who wish to bring up cosign but
    have no Kerberos infrastructure. DO NOT run the BasicAuth version
    of the cosigncgi ( basicosign.cgi ) if you have Kerberos at your
    institution.

    For documentation and information concerning cosign terminology,
    see: http://weblogin.org/

    Your web server should have SSL enabled.

    You will need OpenSSL 0.9.7a or newer.

    You will need a source of entropy for the OpenSSL libraries to
    work.  If your system has /dev/*random then you're all set,
    otherwise you should get something like prngd or egd.  Solaris
    users should refer to document 27606 "Differing /dev/random
    support requirements within Solaris [TM] Operating Environments"
    at <http://sunsolve.sun.com/>.  AIX users will want to get
    prngd.


To build the central cosign server ( the weblogin server ):
    Note that you should only need this if you are establishing a new
    SSO community for which you will be providing the central login
    server.

	./configure --enable-basicauth
	make everything
	make install-all
	mkdir -p /var/cosign/daemon
	chown DAEMON_USER /var/cosign/daemon
    
    The daemon (cosignd) requires  /var/cosign/daemon to exist and be
    writeable by the user the daemon runs as, by default "cosign".

Testing your certificates:

    You want to make sure that the certs you have are able to be used as
    both a server ( weblogin server ) and a client ( basicosign.cgi ). Debugging
    certificate problems is the hardest thing to do, and checking now saves
    a lot of anguish later.

	openssl verify -verbose -purpose sslclient -CApath /var/cosign/certs/CA /var/cosign/certs/cert.pem

	openssl verify -verbose -purpose sslserver -CApath /var/cosign/certs/CA /var/cosign/certs/cert.pem

Configuring your server:
    You'll want something like the following

	#this is so the login will run from / of DocRoot
	DirectoryIndex      basiccosign.cgi index.html 
	AddHandler          cgi-script      .cgi
	<Directory /path/to/docroot>
	    Options ExecCGI
	</Directory>

	#so anything they ask for will take them to the authentication script
	ErrorDocument       404     https://cosign.example.com/

    Otherwise configure your server in the regular way you would to
    make the type of BasicAuth you want to use work in your environment.

    The basiccosign.cgi checks that REMOTE_USER has already been set by
    BasicAuth and take the appropriate login/register actions.

Customizing your html:

    Before doing a 'make everything' and certainly before doing a 'make
    install,' be sure to customize the contents of 'html/header.html,
    'html/footer.html,' and 'html/cosign.css.'  You can, of course,
    customize the other templates as well but be careful with the
    variable display strings ( of the form '$a' where 'a' can be any
    letter or number ).  These are needed by the CGI.

Things to know about the CGI:

    The required html and templates for the cgi ( login page, logout
    page, services page, etc. ) live in ${prefix}/html and
    ${prefix}/templates. You will most likely want to localize these
    pages.

See README.scripts for a cron job that prunes old cookies from the
server's database and a cosignd init script.

./configure options:


    --with-cosignhost=NAME  	default=cosign.example.edu
    --with-cosignlogouturl=URL	default=http://cosign.example.edu
    --with-cosigndb=DIR 	overrides /var/cosign/daemon
    --with-cosignconf=FILE	specify new conf file location
    --with-cosigncadir=DIR	default=/var/cosign/certs/CA 
    --with-cosigncert=FILE	default=/var/cosign/certs/cert.pem
    --with-cosignkey=FILE	default=/var/cosign/certs/key.pem
    #this is not necessary for BasicAuth
    --with-keytabpath=FILE 	default=NULL ( which means use whatever
					the krb5.conf says to use )

    The certificate CN of the weblogin server must match the argument
    to --with-cosignhost.

Questions? cosign@umich.edu
